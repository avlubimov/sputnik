# This file was automatically generated by the configure script.
# Run "./configure --help" for details.
BUILD_LUA=yes
INSTALL_LUA=yes
USE_READLINE=no

PREFIX=/tmp/sputnik/
INCLUDEDIR=/tmp/sputnik//include
LUA_SUFFIX=

READLINE_DIR=/usr
NCURSES_DIR=/usr

LUA_DIR=/tmp/sputnik/
LUA_INCDIR=/tmp/sputnik//include
LUA_LIBDIR=/tmp/sputnik//lib
LUA_BINDIR=/tmp/sputnik//bin

LUA_URL=http://www.lua.org/ftp

READLINE_LIBDIR=$(READLINE_DIR)/lib
READLINE_INCLUDEDIR=$(READLINE_DIR)/include

NCURSES_LIBDIR=$(NCURSES_DIR)/lib
NCURSES_INCLUDEDIR=$(NCURSES_DIR)/include

LUA_VERSION=5.1.4

PLATFORM_CFLAGS=-Wl,-E
PLATFORM_LDFLAGS=-lm -ldl
LIB_FLAG=-shared

ifeq ($(shell uname -m | sed 's/i.86/i386/'),i386)
   FPIC=
else
   FPIC=-fpic
endif

LUA_LIB=$(LUA_LIBDIR)/liblua$(LUA_SUFFIX).a
LUA_DEFPATH=-DLUA_ROOT=\\\"$(LUA_DIR)\\\"
ifeq ($(USE_READLINE), yes)
   LUA_READLINE_CFLAGS=-DLUA_USE_READLINE -I$(READLINE_INCLUDEDIR)
   LUA_READLINE_LIBS=-lreadline -lhistory -lncurses -L$(READLINE_LIBDIR) -L$(NCURSES_LIBDIR)
else
   LUA_READLINE_CFLAGS=
   LUA_READLINE_LIBS=
endif
LUA_MYCFLAGS=-DLUA_USE_POSIX -DLUA_USE_DLOPEN $(LUA_READLINE_CFLAGS)
LUA_MYLIBS=$(PLATFORM_CFLAGS) -ldl $(LUA_READLINE_LIBS)

WGET=wget -c -t0

PLATFORM_BUILD=build

ifeq ($(shell bash -c 'echo linux-gnu'),darwin)
   WGET=curl -O --retry 10
   PLATFORM_BUILD=OSX-build
   ifneq ($(LUA_READLINE_LIBS),)
      LUA_READLINE_LIBS=-lreadline -L$(READLINE_LIBDIR)
   endif
endif
ifeq ($(shell uname -s),FreeBSD)
   PLATFORM_BUILD=FreeBSD-build
endif

platform: $(PLATFORM_BUILD)

OSX-build:
	MACOSX_DEPLOYMENT_TARGET=10.3 $(MAKE) \
	   LUA_MYCFLAGS="-DLUA_USE_MACOSX $(LUA_READLINE_CFLAGS)" \
	   LUA_MYLIBS="$(LUA_READLINE_LIBS)" \
	   PLATFORM_CFLAGS="-dynamic" \
	   PLATFORM_LDFLAGS="-lm -ldl" \
	   LIB_FLAG="-bundle -undefined dynamic_lookup -all_load" \
	   build

FreeBSD-build:
	$(MAKE) \
	   LUA_MYCFLAGS="-DLUA_USE_POSIX -DLUA_USE_DLOPEN" \
	   LUA_MYLIBS="-Wl,-E" \
	   PLATFORM_LDFLAGS="-lm" \
	   build

LUA_TESTFILE=lua-$(LUA_VERSION)/src/lua$(LUA_SUFFIX)

fetch: lua-$(LUA_VERSION)

#lua-$(LUA_VERSION).tar.gz:
#	$(WGET) $(LUA_URL)/$@

lua-$(LUA_VERSION):
	$(MAKE) lua-$(LUA_VERSION).tar.gz
	test -d $@ || tar zxvpf lua-$(LUA_VERSION).tar.gz
	cd lua-$(LUA_VERSION) && patch -p1 < ../lua-$(LUA_VERSION)-easylua.diff

build: $(LUA_TESTFILE)

$(LUA_TESTFILE): lua-$(LUA_VERSION)
	cd lua-$(LUA_VERSION) && $(MAKE) \
	   LUA_SUFFIX="$(LUA_SUFFIX)" \
	   INSTALL_INC="$(LUA_INCDIR)" \
	   MYCFLAGS="$(LUA_DEFPATH) $(LUA_MYCFLAGS)" \
	   MYLIBS="$(LUA_MYLIBS)" \
	   CC="$(CC)" \
	   generic

install: build
	cd lua-$(LUA_VERSION) && $(MAKE) \
	   LUA_SUFFIX="$(LUA_SUFFIX)" \
	   INSTALL_INC="$(LUA_INCDIR)" \
	   INSTALL_TOP="$(LUA_DIR)" \
	   MYCFLAGS="$(LUA_MYCFLAGS)" \
	   MYLIBS="$(LUA_MYLIBS)" \
	   INSTALL_EXEC="install -p -m 0755" \
	   INSTALL_DATA="install -p -m 0644" \
	   STRIP="true" \
	   install

clean:
	if [ -d lua-$(LUA_VERSION) ]; then \
	   cd lua-$(LUA_VERSION) && $(MAKE) \
	      LUA_SUFFIX="$(LUA_SUFFIX)" \
	      clean; \
	fi

klean:
	#rm -f lua-$(LUA_VERSION).tar.gz
	rm -rf lua-$(LUA_VERSION)
	rm -f Makefile
	rm -f lua-$(LUA_VERSION)-easylua.diff

